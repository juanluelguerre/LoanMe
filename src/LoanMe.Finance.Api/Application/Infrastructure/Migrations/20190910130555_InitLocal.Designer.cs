// <auto-generated />
using System;
using LoanMe.Catalog.Api.Application.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanMe.Finance.Api.Application.Infrastructure.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20190910130555_InitLocal")]
    partial class InitLocal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.catalog_brand_hilo", "'catalog_brand_hilo', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanMe.Finance.Api.Domain.Aggregates.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Balance");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LoanMe.Finance.Api.Domain.Aggregates.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0m);

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("LoanMe.Finance.Api.Domain.Aggregates.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("Currency");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LoanMe.Finance.Api.Domain.Aggregates.Account", b =>
                {
                    b.OwnsOne("LoanMe.Finance.Api.Domain.Aggregates.CustomerAggregate.CreditCard", "CreditCard", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                            b1.Property<int>("CardType");

                            b1.Property<DateTime>("ExpiredDate");

                            b1.Property<decimal>("Limit");

                            b1.Property<int>("Number");

                            b1.HasKey("Id");

                            b1.ToTable("CreditCards");

                            b1.HasOne("LoanMe.Finance.Api.Domain.Aggregates.Account")
                                .WithOne("CreditCard")
                                .HasForeignKey("LoanMe.Finance.Api.Domain.Aggregates.CustomerAggregate.CreditCard", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("LoanMe.Finance.Api.Domain.Aggregates.CustomerAggregate.Customer", "Customer", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:HiLoSequenceName", "catalog_brand_hilo")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                            b1.Property<string>("Name");

                            b1.HasKey("Id");

                            b1.ToTable("Customers");

                            b1.HasOne("LoanMe.Finance.Api.Domain.Aggregates.Account")
                                .WithOne("Customer")
                                .HasForeignKey("LoanMe.Finance.Api.Domain.Aggregates.CustomerAggregate.Customer", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("LoanMe.Finance.Api.Domain.ValueObjects.AccountNumber", "AccountNumber", b1 =>
                        {
                            b1.Property<int>("AccountId");

                            b1.Property<string>("Control")
                                .HasMaxLength(2);

                            b1.Property<string>("Entity")
                                .HasMaxLength(4);

                            b1.Property<string>("Number")
                                .HasMaxLength(10);

                            b1.Property<string>("Office")
                                .HasMaxLength(4);

                            b1.HasKey("AccountId");

                            b1.ToTable("Accounts");

                            b1.HasOne("LoanMe.Finance.Api.Domain.Aggregates.Account")
                                .WithOne("AccountNumber")
                                .HasForeignKey("LoanMe.Finance.Api.Domain.ValueObjects.AccountNumber", "AccountId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("LoanMe.Finance.Api.Domain.Aggregates.Loan", b =>
                {
                    b.OwnsOne("LoanMe.Finance.Api.Domain.ValueObjects.AccountNumber", "AccountNumber", b1 =>
                        {
                            b1.Property<int>("LoanId");

                            b1.Property<string>("Control")
                                .HasMaxLength(2);

                            b1.Property<string>("Entity")
                                .HasMaxLength(4);

                            b1.Property<string>("Number")
                                .HasMaxLength(10);

                            b1.Property<string>("Office")
                                .HasMaxLength(4);

                            b1.HasKey("LoanId");

                            b1.ToTable("Loans");

                            b1.HasOne("LoanMe.Finance.Api.Domain.Aggregates.Loan")
                                .WithOne("AccountNumber")
                                .HasForeignKey("LoanMe.Finance.Api.Domain.ValueObjects.AccountNumber", "LoanId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
